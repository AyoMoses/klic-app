// -----------------------------------------------------------------------------
// This file contains all application-wide Sass mixins.
// -----------------------------------------------------------------------------

/// Event wrapper
/// @author Harry Roberts
/// @param {Bool} $self [false] - Whether or not to include current selector
/// @link https://twitter.com/csswizardry/status/478938530342006784 Original tweet from Harry Roberts
@mixin on-event($self: false) {
  @if $self {
    &,
    &:hover,
    &:active,
    &:focus {
      @content;
    }
  } @else {
    &:hover,
    &:active,
    &:focus {
      @content;
    }
  }
}

/// Make a context based selector a little more friendly
/// @author Hugo Giraudel
/// @param {String} $context
@mixin when-inside($context) {
  #{$context} & {
    @content;
  }
}

@mixin respond($breakpoint) {
  @if $breakpoint==phone {
    @media only screen and (min-width: 20em) {
      @content;
    }

    // > 320px
  }

  @if $breakpoint==tab-port {
    @media only screen and (min-width: 48em) {
      @content;
    }

    // > 768px
  }

  @if $breakpoint==tab {
    @media only screen and (min-width: 56.25em) {
      @content;
    }

    // > 900px
  }

  @if $breakpoint==laptop {
    @media only screen and (min-width: 75em) {
      @content;
    }

    // > 1200px
  }

  @if $breakpoint==desktop {
    @media only screen and (min-width: 112.5em) {
      @content;
    }

    // 1800px >
  }
}


@mixin clearfix {
  &::after {
    content: '';
    display: table;
    clear: both;
  }
}

@mixin border-radius($pixel...) {
  border-radius: $pixel;
  -webkit-border-radius: $pixel;
  -moz-border-radius: $pixel;
  -ms-border-radius: $pixel;
  -o-border-radius: $pixel;
}

@mixin box-shadow($shadow...) {
  box-shadow: $shadow;
}

@mixin paddings($padding...) {
  padding: $padding;
}

@mixin margins($margin...) {
  margin: $margin;
}

@mixin btn-style($background, $color, $width, $height, $border) {
  background: $background;
  color: $color;
  width: $width;
  height: $height;
  outline: none;
  border: $border;
}

@mixin mobileFirst($media) {
  @media screen and (min-width: $media/16+em) {
    @content;
  }
}

@mixin filter($value) {
  filter: $value();
  -webkit-filter: $value();
}

@mixin min-max($min, $max) {
  @media screen and (min-width: $min/16+rem) and (max-width: $max/16+rem) {
    @content;
  }
}

@mixin deskTopFirst($media) {
  @media screen and (max-width: $media/16+em) {
    @content;
  }
}

@mixin min-max($min, $max) {
  @media screen and (min-width: $min/16+rem) and (max-width: $max/16+rem) {
    @content;
  }
}

@mixin scale($scale) {
  transform: scale($scale);
  -webkit-transform: scale($scale);
  -moz-transform: scale($scale);
  -ms-transform: scale($scale);
  -o-transform: scale($scale);
}

@mixin trans($trans) {
  transition: all $trans linear;
  -webkit-transition: all $trans linear;
  -moz-transition: all $trans linear;
  -ms-transition: all $trans linear;
  -o-transition: all $trans linear;
}

// FLEX FLOW
@mixin flex-row {
  display: flex;
  flex-direction: row;
  justify-content: center;
  align-items: center;
}

// FLEX SPACE BETWEEN
@mixin flex-space-between {
  display: flex;
  flex-direction: row;
  justify-content: space-between;
  align-items: center;
}

// FLEX ROW-ALONE
@mixin row {
  display: flex;
  flex-direction: row;
}

//FLEX COLUMN
@mixin flex-column {
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
}

// FLEX COLUMN-ALONE
@mixin column {
  display: flex;
  flex-direction: column;
}

@mixin scrollbar-show($barWidth, $borderWidth, $bar-color, $radius, $track-bg, $thumb-bg) {
  -ms-overflow-style: block;

  &::-webkit-scrollbar {
    width: $barWidth;
    border: $borderWidth solid $bar-color;
    border-radius: $radius;
    display: block;
    -webkit-border-radius: $radius;
    -moz-border-radius: $radius;
    -ms-border-radius: $radius;
    -o-border-radius: $radius;
  }

  &::-webkit-scrollbar-track {
    border-radius: 0;
    background-color: $track-bg;
    -webkit-border-radius: 0;
    -moz-border-radius: 0;
    -ms-border-radius: 0;
    -o-border-radius: 0;
  }

  &::-webkit-scrollbar-thumb {
    background-color: $thumb-bg;
  }
}

@mixin backface-visibility($status) {
  backface-visibility: $status;
  -webkit-backface-visibility: $status;
}

@mixin line-clamp($lines) {
  overflow: hidden;
  text-overflow: ellipsis;
  display: -webkit-box;
  -webkit-line-clamp: $lines;
  -webkit-box-orient: vertical;
}

@mixin placeholder($color) {

  /* WebKit, Edge */
  &::-webkit-input-placeholder {
    color: $color;
  }

  /* Firefox 4-18 */
  &:-moz-placeholder {
    color: $color;
  }

  /* Firefox 19+ */
  &::-moz-placeholder {
    color: $color;
  }

  /* IE 10-11 */
  &:-ms-input-placeholder {
    color: $color;
  }

  /* Edge */
  &::-ms-input-placeholder {
    color: $color;
  }

  /* MODERN BROWSER */
  &::placeholder {
    color: $color;
  }
}

@mixin absCenter {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
}

@mixin vertical-line($width, $color, $type, $height) {
  border-right: $width $type $color;
  height: $height;
}

@mixin horizontal-line($height, $type, $color, $width) {
  border-top: $height $type $color;
  width: $width;
}

@mixin double-layer {
  width: 100%;
  max-width: calc(100% - 24px);
  margin: 0 auto;

  @include mobileFirst(769) {

    width: 100%;
    max-width: calc(100% - 166px);
    margin: 0 auto;
  }
}

@mixin rotate($value) {
  transform: rotate($value);
  -webkit-transform: rotate($value);
  -moz-transform: rotate($value);
  -ms-transform: rotate($value);
  -o-transform: rotate($value);
}


// ANIMATION KEYFRAME

@mixin translate-x($start, $middle) {
  @keyframes translate-x {

    0% {
      transform: translateX($start);
      -webkit-transform: translateX($start);
      -moz-transform: translateX($start);
      -ms-transform: translateX($start);
      -o-transform: translateX($start);
    }

    50% {
      transform: translateX($middle);
      -webkit-transform: translateX($middle);
      -moz-transform: translateX($middle);
      -ms-transform: translateX($middle);
      -o-transform: translateX($middle);
    }

    100% {

      transform: translateX($start);
      -webkit-transform: translateX($start);
      -moz-transform: translateX($start);
      -ms-transform: translateX($start);
      -o-transform: translateX($start);

    }
  }

  @-o-keyframes translate-x {

    0% {
      transform: translateX($start);
      -webkit-transform: translateX($start);
      -moz-transform: translateX($start);
      -ms-transform: translateX($start);
      -o-transform: translateX($start);
    }

    50% {
      transform: translateX($middle);
      -webkit-transform: translateX($middle);
      -moz-transform: translateX($middle);
      -ms-transform: translateX($middle);
      -o-transform: translateX($middle);
    }

    100% {

      transform: translateX($start);
      -webkit-transform: translateX($start);
      -moz-transform: translateX($start);
      -ms-transform: translateX($start);
      -o-transform: translateX($start);

    }
  }

  @-moz-keyframes translate-x {

    0% {
      transform: translateX($start);
      -webkit-transform: translateX($start);
      -moz-transform: translateX($start);
      -ms-transform: translateX($start);
      -o-transform: translateX($start);
    }

    50% {
      transform: translateX($middle);
      -webkit-transform: translateX($middle);
      -moz-transform: translateX($middle);
      -ms-transform: translateX($middle);
      -o-transform: translateX($middle);
    }

    100% {

      transform: translateX($start);
      -webkit-transform: translateX($start);
      -moz-transform: translateX($start);
      -ms-transform: translateX($start);
      -o-transform: translateX($start);

    }

  }

  @-webkit-keyframes translate-x {

    0% {
      transform: translateX($start);
      -webkit-transform: translateX($start);
      -moz-transform: translateX($start);
      -ms-transform: translateX($start);
      -o-transform: translateX($start);
    }

    50% {
      transform: translateX($middle);
      -webkit-transform: translateX($middle);
      -moz-transform: translateX($middle);
      -ms-transform: translateX($middle);
      -o-transform: translateX($middle);
    }

    100% {

      transform: translateX($start);
      -webkit-transform: translateX($start);
      -moz-transform: translateX($start);
      -ms-transform: translateX($start);
      -o-transform: translateX($start);

    }

  }
}

@mixin scale-animation($start, $middle) {

  @keyframes scale-animation {

    0% {
      transform: scale($start);
      -webkit-transform: scale($start);
      -moz-transform: scale($start);
      -ms-transform: scale($start);
      -o-transform: scale($start);
    }

    50% {
      transform: scale($middle);
      -webkit-transform: scale($middle);
      -moz-transform: scale($middle);
      -ms-transform: scale($middle);
      -o-transform: scale($middle);
    }

    100% {
      transform: scale($start);
      -webkit-transform: scale($start);
      -moz-transform: scale($start);
      -ms-transform: scale($start);
      -o-transform: scale($start);
    }
  }

  @-o-keyframes scale-animation {

    0% {
      transform: scale($start);
      -webkit-transform: scale($start);
      -moz-transform: scale($start);
      -ms-transform: scale($start);
      -o-transform: scale($start);
    }

    50% {
      transform: scale($middle);
      -webkit-transform: scale($middle);
      -moz-transform: scale($middle);
      -ms-transform: scale($middle);
      -o-transform: scale($middle);
    }

    100% {
      transform: scale($start);
      -webkit-transform: scale($start);
      -moz-transform: scale($start);
      -ms-transform: scale($start);
      -o-transform: scale($start);
    }
  }

  @-moz-keyframes scale-animation {

    0% {
      transform: scale($start);
      -webkit-transform: scale($start);
      -moz-transform: scale($start);
      -ms-transform: scale($start);
      -o-transform: scale($start);
    }

    50% {
      transform: scale($middle);
      -webkit-transform: scale($middle);
      -moz-transform: scale($middle);
      -ms-transform: scale($middle);
      -o-transform: scale($middle);
    }

    100% {
      transform: scale($start);
      -webkit-transform: scale($start);
      -moz-transform: scale($start);
      -ms-transform: scale($start);
      -o-transform: scale($start);
    }
  }

  @-webkit-keyframes scale-animation {

    0% {
      transform: scale($start);
      -webkit-transform: scale($start);
      -moz-transform: scale($start);
      -ms-transform: scale($start);
      -o-transform: scale($start);
    }

    50% {
      transform: scale($middle);
      -webkit-transform: scale($middle);
      -moz-transform: scale($middle);
      -ms-transform: scale($middle);
      -o-transform: scale($middle);
    }

    100% {
      transform: scale($start);
      -webkit-transform: scale($start);
      -moz-transform: scale($start);
      -ms-transform: scale($start);
      -o-transform: scale($start);
    }
  }
}

